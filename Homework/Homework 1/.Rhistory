2+3
3*4
5+7
5+7
5+7
18*7
89/99
gc()
install.packages("gitcreds")
library(gitcreds)
gitcreds_set()
install.packages(c("tidyverse", "psych", "here", "MASS", "remotes"))
install.packages(c("tidyverse", "psych", "here", "MASS", "remotes"))
install.packages(cars.cvs)
######################################################
# Exercise 1
########################################################
cars=read.csv("Cars.csv", header = TRUE)  # read dataset
summary(cars)
cars=data.frame(cars, MPG_Combo)   # data frame with MPG_Combo
# (a)
MPG_Combo <- 0.6*cars$MPG_City+0.4*cars$MPG_Highway  # combined mpg variable
summary(cars)
boxplot(MPG_Combo)
# (a)
MPG_Combo <- 0.6*cars$MPG_City+0.4*cars$MPG_Highway  # combined mpg variable
######################################################
# Exercise 1
########################################################
cars=read.csv("Cars.csv", header = TRUE)  # read dataset
# (a)
MPG_Combo <- 0.6*cars$MPG_City+0.4*cars$MPG_Highway  # combined mpg variable
cars=data.frame(cars, MPG_Combo)   # data frame with MPG_Combo
boxplot(MPG_Combo)
MPG_Combo =(0.6*cars$MPG_City+0.4*cars$MPG_Highway)
boxplot(MPG_Combo)
boxplot(MPG_Combo,na.rm=TRUE)
boxplot(MPG_Combo,ylim = MPG)
boxplot(MPG_Combo,ylim = MPG_Combo)
MPG_Combo <- 0.6*cars$MPG_City+0.4*cars$MPG_Highway  # combined mpg variable
cars=data.frame(cars, MPG_Combo)   # data frame with MPG_Combo
# (a)
MPG_Combo <- 0.6*cars$MPG_City+0.4*cars$MPG_Highway  # combined mpg variable
######################################################
# Exercise 1
########################################################
cars=read.csv("Cars.csv", header = TRUE)  # read dataset
install.packages(cars.cvs)
knitr::opts_chunk$set(echo = TRUE)
boxplot(cars$MPG_Combo,ylab="MPG")
cars=read.csv("Cars.csv", header = TRUE)  # read data set
MPG_Combo <- 0.6*cars$MPG_City+0.4*cars$MPG_Highway  # combined mpg variable
cars=data.frame(cars, MPG_Combo)   # data frame with MPG_Combo
#1 (a)
cars=read.csv("Cars.csv", header = TRUE)  # read data set
knitr::opts_chunk$set(echo = TRUE)
#1 (a)
cars=read.csv("Cars.csv", header = TRUE)  # read data set
knitr::opts_chunk$set(echo = TRUE)
cars=read.csv("Cars.csv", header = TRUE)  # read data set
### Exercise 1: Descriptive Statistics
cars=read.csv("Cars.csv", header = TRUE)  # read dataset
cars=read.csv("Cars.csv", header = TRUE)  # read data set
### Exercise 1: Descriptive Statistics
cars=read.csv("Cars.csv", header = TRUE)  # read dataset
setwd("~/OneDrive/School/Fall 2021/STA 6443/Homework 1/HW 1")
### Exercise 1: Descriptive Statistics
cars=read.csv("Cars.csv", header = TRUE)  # read dataset
#1 (a)
cars=read.csv("Cars.csv", header = TRUE)  # read data set
MPG_Combo <- 0.6*cars$MPG_City+0.4*cars$MPG_Highway  # combined mpg variable
cars=data.frame(cars, MPG_Combo)   # data frame with MPG_Combo
boxplot(cars$MPG_Combo,ylab="MPG")
summary(MPG_Combo)
#The box plot indicates that the median miles per gallon among vehicles is 22 mpg. The mean of 22.54 is slightly higher than the median of 22.00. Therefore, the data is skewed to the right, which may indicate several outliers with miles per gallon significantly above and below the median, and the data is not normally distributed.
knitr::opts_chunk$set(echo = TRUE)
#1 (a)
cars=read.csv("Cars.csv", header = TRUE)  # read data set
MPG_Combo <- 0.6*cars$MPG_City+0.4*cars$MPG_Highway  # combined mpg variable
cars=data.frame(cars, MPG_Combo)   # data frame with MPG_Combo
boxplot(cars$MPG_Combo,ylab="MPG")
summary(MPG_Combo)
#The box plot indicates that the median miles per gallon among vehicles is 22 mpg. The mean of 22.54 is slightly higher than the median of 22.00. Therefore, the data is skewed to the right, which may indicate several outliers with miles per gallon significantly above and below the median, and the data is not normally distributed.
# 1 (b) Obtain box plots for MPG_Combo by Type and comment on any differences you notice between the different vehicle types combined fuel efficiency.
plot(factor(cars$Type), cars$MPG_Combo, main ="Fuel Efficiency", ylab = "MPG", xlab = "Vehicle Type")
# 1 (c) Obtain basic descriptive statistics for Horsepower for all vehicles. Comment on any general features and statistics of the data. Use visual and quantitative methods to comment on whether an assumption of Normality would be reasonable for Horsepower variable.
summary(cars$Horsepower, na.rm=TRUE)
mean(cars$Horsepower, na.rm = TRUE)
var(cars$Horsepower, na.rm = TRUE)
range(cars$Horsepower, na.rm = TRUE)
# 1 (d) Use visual and quantitative methods to comment on whether an assumption of normality would be reasonable for Horsepower variable by Type, especially for Sports, SUV, and Truck (i.e., check normality of Horsepower from Type of i) Sprots, ii) SUV, and iii) Truck.
library(moments)
SUV=subset(cars, Type = "SUV") #Subset SUV as dataframe
summary(SUV$MPG_Combo) #Summarize SUV
Sports = subset(cars, type = "Sports") #Subset sports as dataframe
summary(Sports$MPG_Combo) #Summarize Sports
Truck = subset(cars, Type = "Truck")
summary(Truck$MPG_Combo) #Summarize Truck
#Sports
hist(Sports$Horsepower, main="Sports", xlab="Horsepower") #Histogram of Sports
boxplot(Sports$Horsepower, main="Sports", ylab="Horsepower") #Boxplot for Sports
points(mean(Sports$Horsepower, na.rm=TRUE)) #Mean point on boxplot
qqnorm(cars[cars$Type=="Sports", "Horsepower"]); qqline(cars[cars$Type=="Sports","Horsepower"])
#SUV
hist(SUV$Horsepower, main="SUV", xlab="Horsepower") #Histogram of Sports
boxplot(SUV$Horsepower, main="SUV", ylab="Horsepower") #Boxplot for Sports
points(mean(SUV$Horsepower, na.rm=TRUE)) #Mean point on boxplot
qqnorm(cars[cars$Type=="SUV", "Horsepower"]); qqline(cars[cars$Type=="SUV","Horsepower"])
#Truck
hist(Truck$Horsepower, main="Truck", xlab="Horsepower") #Histogram of Truck
boxplot(Truck$Horsepower, main="Truck ", ylab="Horsepower") #Boxplot for Truck
points(mean(Truck$Horsepower, na.rm=TRUE)) #Mean point on boxplot
qqnorm(cars[cars$Type=="Truck", "Horsepower"]); qqline(cars[cars$Type=="Truck","Horsepower"])
#Normality Information
#i Sports
var(Sports$Horsepower, na.rm=TRUE) #Variance
skewness(Sports$Horsepower, na.rm=TRUE) #Skewness
range(Sports$Horsepower, na.rm=TRUE) #Range
#ii SUV
var(SUV$Horsepower, na.rm=TRUE) #Variance
skewness(SUV$Horsepower, na.rm=TRUE) #Skewness
range(SUV$Horsepower, na.rm=TRUE) #Range
shapiro.test(cars[cars$Type=="SUV", "Horsepower"])
shapiro.test(cars[cars$Type=="Truck", "Horsepower"])
#small p-value implies no normality
#2(a) Which test should we perform, and why? Justify your answer based on findings on Exercise 1 (d).
#The data for SUV and Truck horsepower is not normal, but is somewhat symmetric, therefore, we would perform a Satterthwaite t-test.  Does not follow normal distribution perfectly.
#2 (b) Specify null and alternative hypotheses.
#Null hypothesis: SUV has different horsepower than Truck
#Alternative hypothesis: SUV has the same horsepower than Truck
#2 (c) State the conclusion based on the test result.
#We do not reject the null hypothesis that SUV has different horsepower than Truck.
#3 (a) Which test should we perform, and why? See QQ-plot and perform Shapiro-Wilk test for normality check.
#3 (b) Specify null and alternative hypotheses
#null hypothesis: Wind in July has different speed than Wind in August
#alternative hypothesis: Wind in July has the same speed as the Wind in August
#3 (c) State the conclusion based on the test result.
library(airquality)
library(airquality)
summary(airquality)
shapiro.test(airquality$Wind)
shapiro.test(airquality[airquality$Month==8, "Ozone"])
shapiro.test(airquality$Wind)
shapiro.test(airquality[airquality$Month==8, "Ozone"])
shapiro.test(airquality[airquality$Month==7, "Ozone"])
shapiro.test(airquality[airquality$Month==8, "Ozone"])
mean(airquality$Wind, Month==7)
mean(airquality$Wind(Airquality$Month==7))
mean(airquality$Wind[Airquality$Month==7])
mean(airquality[airquality$Month==7])
mean(airquality[airquality$Month==7, "Wind"])
mean(airquality[airquality$Month==7, "Wind"])
mean(airquality[airquality$Month==8, "Wind"])
mean(airquality[airquality$Month==7, "Wind"])
mean(airquality[airquality$Month==8, "Wind"])
shapiro.test(airquality[airquality$Month==8, "Wind"])
shapiro.test(airquality[airquality$Month==7, "Wind"])
# 1 (d) Use visual and quantitative methods to comment on whether an assumption of normality would be reasonable for Horsepower variable by Type, especially for Sports, SUV, and Truck (i.e., check normality of Horsepower from Type of i) Sprots, ii) SUV, and iii) Truck.
library(moments)
SUV=subset(cars, Type = "SUV") #Subset SUV as dataframe
summary(SUV$MPG_Combo) #Summarize SUV
Sports = subset(cars, type = "Sports") #Subset sports as dataframe
summary(Sports$MPG_Combo) #Summarize Sports
Truck = subset(cars, Type = "Truck")
summary(Truck$MPG_Combo) #Summarize Truck
#Sports
hist(Sports$Horsepower, main="Sports", xlab="Horsepower") #Histogram of Sports
boxplot(Sports$Horsepower, main="Sports", ylab="Horsepower") #Boxplot for Sports
points(mean(Sports$Horsepower, na.rm=TRUE)) #Mean point on boxplot
qqnorm(cars[cars$Type=="Sports", "Horsepower"]); qqline(cars[cars$Type=="Sports","Horsepower"])
#SUV
hist(SUV$Horsepower, main="SUV", xlab="Horsepower") #Histogram of Sports
boxplot(SUV$Horsepower, main="SUV", ylab="Horsepower") #Boxplot for Sports
points(mean(SUV$Horsepower, na.rm=TRUE)) #Mean point on boxplot
qqnorm(cars[cars$Type=="SUV", "Horsepower"]); qqline(cars[cars$Type=="SUV","Horsepower"])
#Truck
hist(Truck$Horsepower, main="Truck", xlab="Horsepower") #Histogram of Truck
boxplot(Truck$Horsepower, main="Truck ", ylab="Horsepower") #Boxplot for Truck
points(mean(Truck$Horsepower, na.rm=TRUE)) #Mean point on boxplot
qqnorm(cars[cars$Type=="Truck", "Horsepower"]); qqline(cars[cars$Type=="Truck","Horsepower"])
#Normality Information
#i Sports
var(Sports$Horsepower, na.rm=TRUE) #Variance
skewness(Sports$Horsepower, na.rm=TRUE) #Skewness
range(Sports$Horsepower, na.rm=TRUE) #Range
#ii SUV
var(SUV$Horsepower, na.rm=TRUE) #Variance
skewness(SUV$Horsepower, na.rm=TRUE) #Skewness
range(SUV$Horsepower, na.rm=TRUE) #Range
shapiro.test(cars[cars$Type=="SUV", "Horsepower"])
shapiro.test(cars[cars$Type=="Truck", "Horsepower"])
#small p-value implies no normality
boxplot(airquality[airquality$wind])
boxplot(airquality$wind)
boxplot(airquality$wind)
boxplot(airquality$wind, ylab="wind")
boxplot(airquality$wind,ylab="wind")
boxplot(airquality)
boxplot(airquality$Wind)
boxplot(airquality[airquality$Month, "Wind"])
boxplot(airquality[airquality$wind, "Month"])
boxplot(airquality[airquality$Wind, "Month"])
boxplot(airquality$Month)
boxplot(airquality$Wind)
setwd("C:/Users/sdy897/Box/Working files/Class/UTSA_STA6443_Algorithms1/data")  # need to change this path
water=read.table("WATER.txt",header=TRUE, sep="")
str(water)
###############################################
# one-sample test
# normality check for mortal and hardness
##############################################
summary(water$mortal)
hist(water$mortal)
boxplot(water$mortal); points(mean(water$mortal), col="red")
qqnorm(water$mortal);qqline(water$mortal, col = 2)
shapiro.test(water$mortal)
summary(water$hardness)
hist(water$hardness)
boxplot(water$hardness); points(mean(water$hardness), col="red")
qqnorm(water$hardness);qqline(water$hardness, col = 2)
shapiro.test(water$hardness)
# one-sample t-test
t.test(water$mortal, mu=1500)
# sign test
library(BSDA)
SIGN.test(water$hardness, md=45)
################################################
# hardness (South vs. North)
boxplot(hardness ~ location, data=water, main="hardness by location",
xlab="location", ylab="hardness")
shapiro.test(water$hardness[water$location=="S"])
shapiro.test(water$hardness[water$location=="N"])
# non-parametric wilcox test
wilcox.test(hardness ~ location, data=water, exact=FALSE)
#################################################
# mortality (South vs. North)
boxplot(mortal ~ location, data=water, main="mortal by location",
xlab="location", ylab="mortal")
shapiro.test(water$mortal[water$location=="S"])
shapiro.test(water$mortal[water$location=="N"])
# Equal variance test to decide - pooled t-test or satterthwaite t-test?
var.test(mortal ~ location, water,
alternative = "two.sided")
bartlett.test(mortal ~ location, water)
# parametric t-test
t.test(mortal ~ location, water,
alternative = "two.sided",var.equal=TRUE)
load("research.RData")
# Salary of researchers from "Ap" (applied) and "Th" (Theory) fields.
# Practice this part based on Week3 video
# Practice this part based on Week3 video
########################
# Normality check
########################
# qualitative way - visually check
qqnorm(airquality$Wind); qqline(airquality$Wind, col = 2)
qqnorm(airquality$Wind); qqline(airquality$Wind, col = 2)
qqnorm(airquality$Wind); qqline(airquality$Wind, col = 2)
qqnorm(airquality[airquality$Wind, "Month"); qqline(airquality$Wind, col = 2)
qqnorm(airquality[airquality$Wind); qqline(airquality$Wind, col = 2)
qqnorm(airquality$Wind); qqline(airquality$Wind, col = 2)
hist(airquality$Wind)
hist(water$mortal)
hist(water$mortal)
water=read.table("WATER.txt",header=TRUE, sep="")
str(water)
boxplot(airquality$Wind); points(mean(airquality$wind), col="red")
knitr::opts_chunk$set(echo = TRUE)
#1 (a)
cars=read.csv("Cars.csv", header = TRUE)  # read data set
MPG_Combo <- 0.6*cars$MPG_City+0.4*cars$MPG_Highway  # combined mpg variable
cars=data.frame(cars, MPG_Combo)   # data frame with MPG_Combo
boxplot(cars$MPG_Combo,ylab="MPG")
summary(MPG_Combo)
#The box plot indicates that the median miles per gallon among vehicles is 22 mpg. The mean of 22.54 is slightly higher than the median of 22.00. Therefore, the data is skewed to the right, which may indicate several outliers with miles per gallon significantly above and below the median, and the data is not normally distributed.
# 1 (b) Obtain box plots for MPG_Combo by Type and comment on any differences you notice between the different vehicle types combined fuel efficiency.
plot(factor(cars$Type), cars$MPG_Combo, main ="Fuel Efficiency", ylab = "MPG", xlab = "Vehicle Type")
# 1 (c) Obtain basic descriptive statistics for Horsepower for all vehicles. Comment on any general features and statistics of the data. Use visual and quantitative methods to comment on whether an assumption of Normality would be reasonable for Horsepower variable.
summary(cars$Horsepower, na.rm=TRUE)
mean(cars$Horsepower, na.rm = TRUE)
var(cars$Horsepower, na.rm = TRUE)
range(cars$Horsepower, na.rm = TRUE)
# 1 (d) Use visual and quantitative methods to comment on whether an assumption of normality would be reasonable for Horsepower variable by Type, especially for Sports, SUV, and Truck (i.e., check normality of Horsepower from Type of i) Sprots, ii) SUV, and iii) Truck.
library(moments)
SUV=subset(cars, Type = "SUV") #Subset SUV as dataframe
summary(SUV$MPG_Combo) #Summarize SUV
Sports = subset(cars, type = "Sports") #Subset sports as dataframe
summary(Sports$MPG_Combo) #Summarize Sports
Truck = subset(cars, Type = "Truck")
summary(Truck$MPG_Combo) #Summarize Truck
#Sports
hist(Sports$Horsepower, main="Sports", xlab="Horsepower") #Histogram of Sports
boxplot(Sports$Horsepower, main="Sports", ylab="Horsepower") #Boxplot for Sports
points(mean(Sports$Horsepower, na.rm=TRUE)) #Mean point on boxplot
qqnorm(cars[cars$Type=="Sports", "Horsepower"]); qqline(cars[cars$Type=="Sports","Horsepower"])
#SUV
hist(SUV$Horsepower, main="SUV", xlab="Horsepower") #Histogram of Sports
boxplot(SUV$Horsepower, main="SUV", ylab="Horsepower") #Boxplot for Sports
points(mean(SUV$Horsepower, na.rm=TRUE)) #Mean point on boxplot
qqnorm(cars[cars$Type=="SUV", "Horsepower"]); qqline(cars[cars$Type=="SUV","Horsepower"])
#Truck
hist(Truck$Horsepower, main="Truck", xlab="Horsepower") #Histogram of Truck
boxplot(Truck$Horsepower, main="Truck ", ylab="Horsepower") #Boxplot for Truck
points(mean(Truck$Horsepower, na.rm=TRUE)) #Mean point on boxplot
qqnorm(cars[cars$Type=="Truck", "Horsepower"]); qqline(cars[cars$Type=="Truck","Horsepower"])
#Normality Information
#i Sports
var(Sports$Horsepower, na.rm=TRUE) #Variance
skewness(Sports$Horsepower, na.rm=TRUE) #Skewness
range(Sports$Horsepower, na.rm=TRUE) #Range
#ii SUV
var(SUV$Horsepower, na.rm=TRUE) #Variance
skewness(SUV$Horsepower, na.rm=TRUE) #Skewness
range(SUV$Horsepower, na.rm=TRUE) #Range
shapiro.test(cars[cars$Type=="SUV", "Horsepower"])
shapiro.test(cars[cars$Type=="Truck", "Horsepower"])
#small p-value implies no normality
#2(a) Which test should we perform, and why? Justify your answer based on findings on Exercise 1 (d).
#The data for SUV and Truck horsepower is not normal, but is somewhat symmetric, therefore, we would perform a Satterthwaite t-test.  Does not follow normal distribution perfectly.
#2 (b) Specify null and alternative hypotheses.
#Null hypothesis: SUV has different horsepower than Truck
#Alternative hypothesis: SUV has the same horsepower than Truck
#2 (c) State the conclusion based on the test result.
#We do not reject the null hypothesis that SUV has different horsepower than Truck.
#3 (a) Which test should we perform, and why? See QQ-plot and perform Shapiro-Wilk test for normality check.
hist(airquality$Wind, )
boxplot(airquality$Wind); points(mean(airquality$wind), col="red")
mean(airquality[airquality$Month==7, "Wind"])
mean(airquality[airquality$Month==8, "Wind"])
shapiro.test(airquality[airquality$Month==7, "Wind"])
shapiro.test(airquality[airquality$Month==8, "Wind"])
qqnorm(airquality$Wind); qqline(airquality$Wind, col = 2)
#3 (b) Specify null and alternative hypotheses
#null hypothesis: Wind in July has different speed than Wind in August
#alternative hypothesis: Wind in July has the same speed as the Wind in August
#3 (c) State the conclusion based on the test result.
#We do not reject the null hypothesis
hist(airquality$Wind)
hist(airquality$Wind, main="Wind")
hist(airquality$Wind, xlab="Wind")
hist(airquality$Wind, main= "Airquality", xlab="Wind")
hist(airquality$Wind, main= "Airquality", xlab="Wind", ylab="speed")
hist(airquality$Month, main= "Airquality", xlab="Wind", ylab="speed")
hist(airquality$Wind, main= "Airquality", xlab="Months", ylab="speed")
hist(airquality$Wind, main= "Airquality", ylab="speed")
summary(airquality)
knitr::opts_chunk$set(echo = TRUE)
#3 (a) Which test should we perform, and why? See QQ-plot and perform Shapiro-Wilk test for normality check.
summary(airquality)
hist(airquality$Wind, main= "Airquality", ylab="speed")
boxplot(airquality$Wind); points(mean(airquality$wind), col="red")
mean(airquality[airquality$Month==7, "Wind"])
mean(airquality[airquality$Month==8, "Wind"])
shapiro.test(airquality[airquality$Month==7, "Wind"])
shapiro.test(airquality[airquality$Month==8, "Wind"])
qqnorm(airquality$Wind); qqline(airquality$Wind, col = 2)
shapiro.test(airquality[airquality$Month==7, "Wind"])
shapiro.test(airquality[airquality$Month==8, "Wind"])
shapiro.test(airquality[airquality$Month==7, "Wind"])
shapiro.test(airquality[airquality$Month==8, "Wind"])
mean(airquality[airquality$Month==7, "Wind"])
mean(airquality[airquality$Month==8, "Wind"])
mean(airquality[airquality$Month==8, "Wind"])
mean(airquality[airquality$Month==7, "Wind"])
mean(airquality[airquality$Month==8, "Wind"])
var.test(month7.wind, month8.wind, data=airquality)
month7.wind <- airquality[airquality$Month==7, "Wind"]
var.test(month7.wind, month8.wind, data=airquality)
var.test(month7.wind, month8.wind, data=airquality)
month8.wind <- airquality[airquality$Month==8, "Wind"]
var.test(month7.wind, month8.wind, data=airquality)
t.test(month7.wind, month8.wind,
alternative = "two.sided",var.equal=TRUE)
t.test(month7.wind, month8.wind,
alternative = "two.sided",var.equal=TRUE)
